{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport styles from '../styles/utils.module.css';\nimport Head from 'next/head';\nimport Layout from '../components/Layout';\nimport { Button, DialogTitle, TextField } from '@material-ui/core';\nimport Dialog from '@material-ui/core/Dialog';\nimport { useEffect, useState } from 'react';\nimport { useRouter } from 'next/router';\nimport Link from 'next/link';\nexport const Users = ({\n  users\n}) => {\n  const {\n    0: creating,\n    1: setCreating\n  } = useState(false);\n  const {\n    0: submit,\n    1: setSubmit\n  } = useState(false);\n  const {\n    0: campi,\n    1: setCampi\n  } = useState({\n    email: '',\n    firstName: '',\n    lastName: '',\n    city: '',\n    address: '',\n    date: ''\n  });\n  const router = useRouter();\n\n  const handleChange = e => {\n    setCampi(_objectSpread(_objectSpread({}, campi), {}, {\n      [e.target.name]: e.target.value\n    }));\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    setSubmit(!submit);\n  };\n\n  const handleClick = () => {\n    setCreating(!creating);\n  };\n\n  const createNote = async () => {\n    try {\n      const res = await fetch('http://localhost:3000/api/users', {\n        method: 'POST',\n        headers: {\n          \"Accept\": \"application/json\",\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(campi)\n      });\n      router.push(\"/\");\n    } catch (error) {\n      console.log(\"Error:\", error);\n    }\n  };\n\n  useEffect(() => {\n    if (submit) {\n      createNote();\n    } else {\n      setSubmit(false);\n    }\n  });\n  return /*#__PURE__*/_jsx(Layout, {\n    children: /*#__PURE__*/_jsxs(\"div\", {\n      className: styles.container,\n      children: [/*#__PURE__*/_jsxs(Head, {\n        children: [/*#__PURE__*/_jsx(\"title\", {\n          children: \"Users\"\n        }), /*#__PURE__*/_jsx(\"link\", {\n          rel: \"icon\",\n          href: \"/favicon.ico\"\n        })]\n      }), /*#__PURE__*/_jsxs(\"main\", {\n        className: styles.main,\n        children: [/*#__PURE__*/_jsxs(\"h2\", {\n          className: styles.title,\n          children: [users.length, \" users\"]\n        }), /*#__PURE__*/_jsx(\"br\", {}), /*#__PURE__*/_jsxs(Button, {\n          onClick: handleClick,\n          variant: \"outlined\",\n          children: [\" \", creating ? 'Creating..' : 'Create User', \" \"]\n        }), creating ? /*#__PURE__*/_jsx(_Fragment, {\n          children: /*#__PURE__*/_jsxs(Dialog, {\n            fullWidth: true,\n            open: \"true\",\n            children: [/*#__PURE__*/_jsx(DialogTitle, {\n              style: {\n                textAlign: 'center',\n                marginTop: 7\n              },\n              children: /*#__PURE__*/_jsx(\"h2\", {\n                children: /*#__PURE__*/_jsx(\"b\", {\n                  children: \"Adding new user...\"\n                })\n              })\n            }), /*#__PURE__*/_jsxs(\"form\", {\n              onSubmit: handleSubmit,\n              style: {\n                padding: 50,\n                paddingTop: 20\n              },\n              children: [/*#__PURE__*/_jsx(TextField, {\n                fullWidth: true,\n                required: true,\n                value: campi.email,\n                onChange: handleChange,\n                name: \"email\",\n                type: \"email\",\n                placeholder: \"Email\"\n              }), /*#__PURE__*/_jsx(\"br\", {}), /*#__PURE__*/_jsx(\"br\", {}), /*#__PURE__*/_jsx(TextField, {\n                fullWidth: true,\n                required: true,\n                value: campi.firstName,\n                onChange: handleChange,\n                name: \"firstName\",\n                type: \"text\",\n                placeholder: \"First Name\"\n              }), /*#__PURE__*/_jsx(\"br\", {}), /*#__PURE__*/_jsx(\"br\", {}), /*#__PURE__*/_jsx(TextField, {\n                fullWidth: true,\n                required: true,\n                value: campi.lastName,\n                onChange: handleChange,\n                name: \"lastName\",\n                type: \"text\",\n                placeholder: \"Last Name\"\n              }), /*#__PURE__*/_jsx(\"br\", {}), /*#__PURE__*/_jsx(\"br\", {}), /*#__PURE__*/_jsx(TextField, {\n                fullWidth: true,\n                required: true,\n                value: campi.city,\n                onChange: handleChange,\n                name: \"city\",\n                type: \"text\",\n                placeholder: \"City\"\n              }), /*#__PURE__*/_jsx(\"br\", {}), /*#__PURE__*/_jsx(\"br\", {}), /*#__PURE__*/_jsx(TextField, {\n                fullWidth: true,\n                required: true,\n                value: campi.address,\n                onChange: handleChange,\n                name: \"address\",\n                type: \"text\",\n                placeholder: \"Address\"\n              }), /*#__PURE__*/_jsx(\"br\", {}), /*#__PURE__*/_jsx(\"br\", {}), /*#__PURE__*/_jsx(TextField, {\n                fullWidth: true,\n                required: true,\n                value: campi.date,\n                onChange: handleChange,\n                name: \"date\",\n                type: \"text\",\n                placeholder: \"Date\"\n              }), /*#__PURE__*/_jsx(\"br\", {}), /*#__PURE__*/_jsx(\"br\", {}), /*#__PURE__*/_jsx(\"br\", {}), /*#__PURE__*/_jsxs(\"div\", {\n                children: [/*#__PURE__*/_jsx(Button, {\n                  variant: \"outlined\",\n                  type: \"submit\",\n                  style: {\n                    float: 'right',\n                    borderColor: '#47cf73'\n                  },\n                  children: \"Confirm\"\n                }), /*#__PURE__*/_jsx(Button, {\n                  color: \"secondary\",\n                  onClick: handleClick,\n                  variant: \"outlined\",\n                  style: {\n                    float: 'right',\n                    marginRight: 8\n                  },\n                  children: \"Close\"\n                })]\n              })]\n            })]\n          })\n        }) : /*#__PURE__*/_jsx(_Fragment, {}), /*#__PURE__*/_jsx(\"div\", {\n          className: styles.grid,\n          children: users.map((user, i) => {\n            return /*#__PURE__*/_jsx(_Fragment, {\n              children: /*#__PURE__*/_jsx(Link, {\n                id: user._id,\n                href: `/${user._id}`,\n                children: /*#__PURE__*/_jsxs(\"a\", {\n                  className: styles.card,\n                  children: [/*#__PURE__*/_jsxs(\"h3\", {\n                    children: [user.firstName, \" \", user.lastName, \" \\u2192\"]\n                  }), /*#__PURE__*/_jsx(\"p\", {\n                    children: user.email\n                  }), /*#__PURE__*/_jsx(\"p\", {\n                    children: user.address\n                  }), /*#__PURE__*/_jsx(\"p\", {\n                    children: user.date\n                  }), /*#__PURE__*/_jsx(\"p\", {\n                    children: user.city\n                  })]\n                })\n              })\n            });\n          })\n        })]\n      })]\n    })\n  });\n};\nexport default Users;\n\nUsers.getInitialProps = async () => {\n  const res = await fetch('http://localhost:3000/api/users');\n  const {\n    data\n  } = await res.json();\n  return {\n    users: data\n  };\n};","map":null,"metadata":{},"sourceType":"module"}